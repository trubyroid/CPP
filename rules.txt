Любая функция, реализованная в заголовке (кроме шаблонов), и любой незащищенный заголовок означает 0 для упражнения.
• Каждый вывод переходит в стандартный вывод и будет заканчиваться новой строкой, если не указано иное.
• Введенные имена файлов должны следовать до буквы, так же как имена классов, имена функций и имена методов.
• Помните: вы сейчас кодите на C ++, а не на C. Следовательно:
◦ Следующие функции ЗАПРЕЩЕНЫ, и их использование будет наказано 0, без вопросов: * alloc, * printf и free.
◦ Вам разрешено использовать практически все, что есть в стандартной библиотеке. ОДНАКО, было бы разумно попытаться использовать версии C ++ функций, к которым вы привыкли в C, вместо того, чтобы просто придерживаться того, что вы знаете, в конце концов, это новый язык. И НЕТ, вам не разрешено использовать STL до тех пор, пока вы действительно не должны (то есть до модуля 08). Это означает, что до тех пор нет векторов / списков / карт / и т. Д. ... или чего-либо, что требует включения <algorithm>.
• Фактически, использование любой явно запрещенной функции или механизма будет наказываться 0 без вопросов.
• Также обратите внимание, что если не указано иное, ключевые слова C ++ «using namespace» и «friend» запрещены. Их использование будет наказано -42, без вопросов.
• Файлы, связанные с классом, всегда будут ClassName.hpp и ClassName.cpp, если не указано иное.
• Каталоги сдачи: ex00 /, ex01 /,. . . , exn /.
• Вы должны внимательно прочитать примеры. Они могут содержать требования, которые не очевидны в описании упражнения. Если что-то кажется неоднозначным, вы не
достаточно разбираться в C ++.
• Поскольку вам разрешено использовать инструменты C ++, о которых вы узнали с самого начала, вам не разрешается использовать какие-либо внешние библиотеки. И прежде чем вы спросите, это также означает отсутствие C ++ 11 и его производных, Boost или чего-то еще, без чего ваш опытный друг сказал вам, что C ++ не может существовать.
• От вас могут потребовать сдать большое количество занятий. Это может показаться утомительным, если только вы не можете написать сценарий для своего любимого текстового редактора.
• Прочтите каждое упражнение ПОЛНОСТЬЮ перед тем, как приступить к нему! Действительно, сделай это.
• Используемый компилятор - clang ++.
• Ваш код должен быть скомпилирован со следующими флагами: -Wall -Wextra -Werror.
• Каждое из ваших включений должно иметь возможность включаться независимо от других. Включаемые элементы должны содержать все остальные включения, от которых они зависят, очевидно.
• Если вам интересно, в C ++ стиль кодирования не применяется. Вы можете использовать любой понравившийся стиль, без ограничений. Но помните, что код, который ваш коллега-оценщик не может прочитать, - это код, который он или она не может оценить.
• Важный момент: вы НЕ будете оцениваться по программе, если это явно не указано в теме. Таким образом, вам предоставляется определенная свобода в выборе упражнений. Однако помните об ограничениях каждого упражнения и НЕ ленитесь, вы пропустите МНОГО из того, что они могут предложить!
• Не проблема иметь какие-то посторонние файлы в том, что вы передаете, вы можете разделить свой код на большее количество файлов, чем то, что от вас требуется. Не стесняйтесь, если результат не оценивается программой.
• Даже если тема упражнения короткая, стоит потратить на нее некоторое время, чтобы быть абсолютно уверенным, что вы понимаете, чего от вас ждут, и что вы сделали это наилучшим образом.
• Один, Тор! Используй свой мозг!!!