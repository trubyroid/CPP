ex00:
Напишите следующие шаблоны функций:
• swap: меняет местами значения двух аргументов. Ничего не возвращает.
• min: сравнивает два аргумента и возвращает наименьший из них. Если два аргумента равны, возвращается второй.
• max: сравнивает два аргумента и возвращает самый большой. Если два аргумента равны, возвращается второй.
Шаблоны должны быть определены в файлах заголовков. Вы должны включить main.cpp, содержащий тесты для вашей программы. Этот файл может и будет изменен во время оценки. 
Эти функции могут быть вызваны с любым типом аргумента, при условии, что два аргумента имеют
того же типа и поддерживает все операторы сравнения. Предоставьте достаточно кода для компиляции исполняемого файла, подтверждающего, что все работает по назначению.

ex01:
Напишите шаблон функции, который принимает 3 параметра и ничего не возвращает. Первый параметр - это адрес массива, второй - длина массива, а третий - функция, вызываемая для каждого элемента массива.
Оберните свою работу в исполняемый файл, который доказывает, что ваш шаблон функции работает с любым типом массива и / или с созданным экземпляром шаблона функции в качестве третьего параметра.

ex02:
Напишите массив шаблона класса, который содержит элементы типа T и допускает следующее поведение:
• Конструкция без параметра: создает пустой массив.
• Конструкция с беззнаковым int n в качестве параметра: создает массив из n элементов, инициализированных по умолчанию. (Совет: попробуйте скомпилировать int * a = new int ();, затем отобразите * a.)
• Построение оператором копирования и присваивания. В обоих случаях изменение одного из двух массивов после копирования / присваивания не повлияет ни на что в другом массиве.
• Вы ДОЛЖНЫ использовать оператор new [] для выделения. Вы не должны делать профилактическое размещение. Ваш код никогда не должен обращаться к нераспределенной памяти.
• Элементы доступны через оператор [].
• При доступе к элементу с помощью оператора [], если этот элемент выходит за пределы,
генерируется исключение std :: exception.
• Размер функции-члена, которая возвращает количество элементов в массиве. Эта функция-член не принимает параметров и никоим образом не изменяет текущий экземпляр.
Оберните свою работу в исполняемый файл, который докажет, что ваш шаблон класса работает так, как задумано.